package com.fantafeat.Adapter;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.fantafeat.Model.AffiliationDetailModel;import com.fantafeat.R;import java.util.List;public class AffiliationDetailAdapter extends RecyclerView.Adapter<AffiliationDetailAdapter.AffiliationHolder> {    Context mContext;    List<AffiliationDetailModel> affiliationDetailModelList;    public AffiliationDetailAdapter(Context mContext, List<AffiliationDetailModel> affiliationDetailModelList) {        this.mContext = mContext;        this.affiliationDetailModelList = affiliationDetailModelList;    }    @NonNull    @Override    public AffiliationHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        return new AffiliationHolder(LayoutInflater.from(mContext).inflate(R.layout.row_affiliation_details,parent,false));    }    @Override    public void onBindViewHolder(@NonNull AffiliationHolder holder, int position) {        AffiliationDetailModel model = affiliationDetailModelList.get(position);        holder.aff_team_name.setText(model.getTempTeamName());        holder.aff_entry_fee.setText(mContext.getResources().getString(R.string.rs)+ model.getEntryFee());        holder.aff_no_team_join.setText(model.getNoTeamJoin());        holder.aff_commission.setText(mContext.getResources().getString(R.string.rs) + model.getPromotorCommision());    }    @Override    public int getItemCount() {        return affiliationDetailModelList.size();    }    public class AffiliationHolder extends RecyclerView.ViewHolder{        TextView aff_team_name,aff_entry_fee,aff_no_team_join,aff_commission;        public AffiliationHolder(@NonNull View itemView) {            super(itemView);            aff_team_name = itemView.findViewById(R.id.aff_team_name);            aff_entry_fee = itemView.findViewById(R.id.aff_entry_fee);            aff_no_team_join = itemView.findViewById(R.id.aff_no_team_join);            aff_commission = itemView.findViewById(R.id.aff_commission);        }    }    public void updateData(List<AffiliationDetailModel> affiliationDetailModelList) {        this.affiliationDetailModelList = affiliationDetailModelList;        notifyDataSetChanged();    }}